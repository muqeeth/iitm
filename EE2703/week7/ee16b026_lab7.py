#import libraries
from pylab import *
import matplotlib.pyplot as plt
import scipy.signal as sp

#define transfer function X(s)
#X(s) = s+0.5/(((s+0.5)*(s+0.5)+2.25]*[s*s+2.25))
num = poly1d([1,0.5])
den = polymul([1,1,2.5],[1,0,2.25])
X = sp.lti(num,den)
t,x=sp.impulse(X,None,linspace(0,50,501))
plt.figure(0)
title('time response of spring')
xlabel('$t$',fontsize=20)
ylabel('$x$',fontsize=20)
plot(t,x)


#define transfer function X(s)
#X(s) = s+0.05/(((s+0.05)*(s+0.05)+2.25]*[s*s+2.25))
num = poly1d([1,0.05])
den = polymul([1,0.1,2.2525],[1,0,2.25])
X = sp.lti(num,den)
t,x=sp.impulse(X,None,linspace(0,50,501))
plt.figure(1)
title('time response of spring')
xlabel('$t$',fontsize=20)
ylabel('$x$',fontsize=20)
plot(t,x)

#probmem3
for a in arange(1.4,1.65,0.05):
    t =linspace(0,50,501)
    u = cos(a*t)*exp(-0.05*t) 
    num = poly1d([1])
    den = poly1d([1,0,2.25])
    H = sp.lti(num,den)
    t,x,svec=sp.lsim(H,u,t)
    plt.figure(2)
    plot(t,x)
title('time response for different frequencies')
plt.legend(['$\omega=1.4$','$\omega=1.45$','$\omega=1.5$','$\omega=1.55$','$\omega=1.6$'])
xlabel('$t$')
ylabel('$x$')

#problem 4
numx = poly1d([1,0,2])
denx = poly1d([1,0,3,0])
X = sp.lti(numx,denx)
numy = poly1d([2])
deny = poly1d([1,0,3,0])
Y = sp.lti(numy,deny)
t,x=sp.impulse(X,None,linspace(0,20,201))
t,y=sp.impulse(Y,None,linspace(0,20,201))
plt.figure(3)
title('Coupled spring')
plot(t,x)
plot(t,y)
plt.legend(['$x(t)$','$y(t)$'])
plt.figure(4)
title('plot of x vs y for coupled spring')
xlabel('$x(t)$',fontsize=20)
ylabel('$y(t)$',fontsize=20)
plot(x,y)


#problem5
#H(s) = 1/(s2LC+SCR+1) LC = e-12,RC = e-4
num = poly1d([1])
den = poly1d([pow(10,-12),pow(10,-4),1])
H = sp.lti(num,den)
w,S,phi=H.bode()
title('Magnitude and phase response of steady state transfer function')
plt.figure(5)
subplot(2, 1, 1)
ylabel('$Magnitude(dB)$')
semilogx(w,S)
subplot(2, 1, 2)
ylabel('$Phase(deg)$')
xlabel('$\omega(rad/s)$')
semilogx(w,phi)

t =arange(0,0.01,pow(10,-7))
u = cos(pow(10,3)*t) - cos(pow(10,6)*t)
num = poly1d([1])
den = poly1d([pow(10,-12),pow(10,-4),1])
H = sp.lti(num,den)
t,y,svec=sp.lsim(H,u,t)
plt.figure(6)
title('output voltage for 10m sec')
ylabel('$V_o(t)$')
xlabel('$t$')
plot(t,y)
plt.figure(8)
plot(t,y)
plot(t,cos(pow(10,3)*t))
plt.legend(['$V_o(t)$','$cos(10^3t)u(t)$'])

t =arange(0,3*pow(10,-5),pow(10,-7))
u = cos(pow(10,3)*t) - cos(pow(10,6)*t)
num = poly1d([1])
den = poly1d([pow(10,-12),pow(10,-4),1])
H = sp.lti(num,den)
t,y,svec=sp.lsim(H,u,t)
plt.figure(7)
title('output voltage for 0<t<30usec')
ylabel('$V_o(t)$')
xlabel('$t$')
plot(t,y)
show()